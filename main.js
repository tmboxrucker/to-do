(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>A});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,'html {\n    --primary-dark: #333;\n    --primary-light: #ededed;\n    --secondary-light: #fefefe;\n    --darker-light: #bdbdbd;\n}\n\n* {\n    margin: 0%;\n    padding: 0%;\n    box-sizing: border-box;\n}\n\nbody {\n    background-color: var(--primary-light);\n    font-family: \'Roboto\', sans-serif;\n    color: var(--primary-dark);\n    display: flex;\n    flex-direction: column;\n    min-height: 100vh;\n    font-size: 1.2em;\n    background-position: bottom;\n    background-attachment: fixed;\n    background-size: cover;\n}\n\ninput, select, button {\n    font-family: inherit;\n    font-size: inherit;\n}\n\n#content {\n    display: flex;\n    flex-direction: column;\n    height: 100vh;\n}\n\n/* Header section */\n\n.header {\n    background-color: var(--primary-dark);\n    color: var(--primary-light);\n    padding: 25px 0px 25px 25px;\n}\n\n/* Body section */\n\n.body {\n    flex: 1;\n    display: flex;\n}\n\n/* Nav body section */\n\n.nav {\n    padding: 25px 25px 0px 25px;\n    max-width: 200px;\n    min-width: 200px;\n    background-color: var(--darker-light);\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.filter {\n    margin: 10px;\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\n.taskList p {\n    margin: 10px;\n}\n\n/* Main body section */\n\n#main {\n    width: 800px;\n    margin: 0 auto;\n    padding: 25px 25px 0px 25px;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 10px;\n}\n\n#main h2 {\n    padding: 5px;\n}\n\n.addTask {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    font-size: 22px;\n    color: #717171;\n    cursor: pointer;\n}\n\n.addTask img {\n    height: 26px;\n    padding-left: 5px;\n}\n\n.addTask:hover {\n    filter: invert(0%) sepia(100%) saturate(0%) hue-rotate(70deg) brightness(95%) contrast(103%);\n    color: black;\n}\n\n.task {\n    align-self: stretch;\n    display: flex;\n    flex-direction: column;\n}\n\n.definedTask {\n    display: flex;\n    width:100%;\n    justify-content: space-between;\n    padding: 5px;\n}\n\n/* Checkbox styling */\n\n.checkbox {\n    display: block;\n    position: relative;\n    padding-left: 35px;\n    margin-bottom: 12px;\n    cursor: pointer;\n    font-size: 22px;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n}\n\n.checkbox input {\n    position: absolute;\n    opacity: 0;\n    cursor: pointer;\n    height: 0;\n    width: 0;\n}\n\n.checkmark {\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 25px;\n    width: 25px;\n    background-color: white;\n    cursor: pointer;\n}\n\n.checkbox:hover input ~ .checkmark {\n    background-color: var(--darker-light);\n}\n\n.checkmark:after {\n    content: "";\n    position: absolute;\n    display: none;\n    cursor: pointer;\n}\n\n.checkbox input:checked ~ .checkmark {\n    background-color: var(--primary-dark);\n}\n\n.checkbox input:checked ~ .checkmark:after {\n    display: block;\n}\n\n.checkbox .checkmark:after {\n    left: 9px;\n    top: 5px;\n    width: 5px;\n    height: 10px;\n    border: solid white;\n    border-width: 0 3px 3px 0;\n    -webkit-transform: rotate(45deg);\n    -ms-transform: rotate(45deg);\n    transform: rotate(45deg);\n}\n\n\n\n\n\n\n.taskList .checkbox {\n    display: block;\n    position: relative;\n    padding-left: 25px;\n    margin-bottom: 12px;\n    cursor: pointer;\n    font-size: 17px;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n}\n\n.taskList .checkbox input {\n    position: absolute;\n    opacity: 0;\n    cursor: pointer;\n    height: 0;\n    width: 0;\n}\n\n.taskList .checkmark {\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 15px;\n    width: 15px;\n    background-color: white;\n    cursor: pointer;\n}\n\n.taskList .checkbox:hover input ~ .checkmark {\n    background-color: var(--primary-light);\n}\n\n.taskList .checkmark:after {\n    content: "";\n    position: absolute;\n    display: none;\n    cursor: pointer;\n}\n\n.taskList .checkbox input:checked ~ .checkmark {\n    background-color: var(--primary-dark);\n}\n\n.taskList .checkbox input:checked ~ .checkmark:after {\n    display: block;\n}\n\n.taskList .checkbox .checkmark:after {\n    left: 4px;\n    top: 2px;\n    width: 2.5px;\n    height: 5px;\n    border: solid white;\n    border-width: 0 3px 3px 0;\n    -webkit-transform: rotate(45deg);\n    -ms-transform: rotate(45deg);\n    transform: rotate(45deg);\n}\n\n\n\n\n\n\n.strikethrough {\n    text-decoration: line-through;\n    color: var(--darker-light);\n    filter: invert(94%) sepia(0%) saturate(1098%) hue-rotate(148deg) brightness(85%) contrast(80%);    \n}\n\n.date {\n    display: flex;\n    gap: 5px;\n}\n\n.date img {\n    height: 20px;\n    cursor: pointer;\n}\n\n.date img:hover {\n    transform: scale(1.1);\n    filter: invert(19%) sepia(0%) saturate(19%) hue-rotate(251deg) brightness(86%) contrast(89%);\n}\n\n/* Footer section */\n\n.footer {\n    text-align: center;\n    padding: 5px 0px 5px 0px;\n    background-color: var(--primary-dark);\n    color: var(--primary-light);\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:['html {\n    --primary-dark: #333;\n    --primary-light: #ededed;\n    --secondary-light: #fefefe;\n    --darker-light: #bdbdbd;\n}\n\n* {\n    margin: 0%;\n    padding: 0%;\n    box-sizing: border-box;\n}\n\nbody {\n    background-color: var(--primary-light);\n    font-family: \'Roboto\', sans-serif;\n    color: var(--primary-dark);\n    display: flex;\n    flex-direction: column;\n    min-height: 100vh;\n    font-size: 1.2em;\n    background-position: bottom;\n    background-attachment: fixed;\n    background-size: cover;\n}\n\ninput, select, button {\n    font-family: inherit;\n    font-size: inherit;\n}\n\n#content {\n    display: flex;\n    flex-direction: column;\n    height: 100vh;\n}\n\n/* Header section */\n\n.header {\n    background-color: var(--primary-dark);\n    color: var(--primary-light);\n    padding: 25px 0px 25px 25px;\n}\n\n/* Body section */\n\n.body {\n    flex: 1;\n    display: flex;\n}\n\n/* Nav body section */\n\n.nav {\n    padding: 25px 25px 0px 25px;\n    max-width: 200px;\n    min-width: 200px;\n    background-color: var(--darker-light);\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.filter {\n    margin: 10px;\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\n.taskList p {\n    margin: 10px;\n}\n\n/* Main body section */\n\n#main {\n    width: 800px;\n    margin: 0 auto;\n    padding: 25px 25px 0px 25px;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 10px;\n}\n\n#main h2 {\n    padding: 5px;\n}\n\n.addTask {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    font-size: 22px;\n    color: #717171;\n    cursor: pointer;\n}\n\n.addTask img {\n    height: 26px;\n    padding-left: 5px;\n}\n\n.addTask:hover {\n    filter: invert(0%) sepia(100%) saturate(0%) hue-rotate(70deg) brightness(95%) contrast(103%);\n    color: black;\n}\n\n.task {\n    align-self: stretch;\n    display: flex;\n    flex-direction: column;\n}\n\n.definedTask {\n    display: flex;\n    width:100%;\n    justify-content: space-between;\n    padding: 5px;\n}\n\n/* Checkbox styling */\n\n.checkbox {\n    display: block;\n    position: relative;\n    padding-left: 35px;\n    margin-bottom: 12px;\n    cursor: pointer;\n    font-size: 22px;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n}\n\n.checkbox input {\n    position: absolute;\n    opacity: 0;\n    cursor: pointer;\n    height: 0;\n    width: 0;\n}\n\n.checkmark {\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 25px;\n    width: 25px;\n    background-color: white;\n    cursor: pointer;\n}\n\n.checkbox:hover input ~ .checkmark {\n    background-color: var(--darker-light);\n}\n\n.checkmark:after {\n    content: "";\n    position: absolute;\n    display: none;\n    cursor: pointer;\n}\n\n.checkbox input:checked ~ .checkmark {\n    background-color: var(--primary-dark);\n}\n\n.checkbox input:checked ~ .checkmark:after {\n    display: block;\n}\n\n.checkbox .checkmark:after {\n    left: 9px;\n    top: 5px;\n    width: 5px;\n    height: 10px;\n    border: solid white;\n    border-width: 0 3px 3px 0;\n    -webkit-transform: rotate(45deg);\n    -ms-transform: rotate(45deg);\n    transform: rotate(45deg);\n}\n\n\n\n\n\n\n.taskList .checkbox {\n    display: block;\n    position: relative;\n    padding-left: 25px;\n    margin-bottom: 12px;\n    cursor: pointer;\n    font-size: 17px;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n}\n\n.taskList .checkbox input {\n    position: absolute;\n    opacity: 0;\n    cursor: pointer;\n    height: 0;\n    width: 0;\n}\n\n.taskList .checkmark {\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 15px;\n    width: 15px;\n    background-color: white;\n    cursor: pointer;\n}\n\n.taskList .checkbox:hover input ~ .checkmark {\n    background-color: var(--primary-light);\n}\n\n.taskList .checkmark:after {\n    content: "";\n    position: absolute;\n    display: none;\n    cursor: pointer;\n}\n\n.taskList .checkbox input:checked ~ .checkmark {\n    background-color: var(--primary-dark);\n}\n\n.taskList .checkbox input:checked ~ .checkmark:after {\n    display: block;\n}\n\n.taskList .checkbox .checkmark:after {\n    left: 4px;\n    top: 2px;\n    width: 2.5px;\n    height: 5px;\n    border: solid white;\n    border-width: 0 3px 3px 0;\n    -webkit-transform: rotate(45deg);\n    -ms-transform: rotate(45deg);\n    transform: rotate(45deg);\n}\n\n\n\n\n\n\n.strikethrough {\n    text-decoration: line-through;\n    color: var(--darker-light);\n    filter: invert(94%) sepia(0%) saturate(1098%) hue-rotate(148deg) brightness(85%) contrast(80%);    \n}\n\n.date {\n    display: flex;\n    gap: 5px;\n}\n\n.date img {\n    height: 20px;\n    cursor: pointer;\n}\n\n.date img:hover {\n    transform: scale(1.1);\n    filter: invert(19%) sepia(0%) saturate(19%) hue-rotate(251deg) brightness(86%) contrast(89%);\n}\n\n/* Footer section */\n\n.footer {\n    text-align: center;\n    padding: 5px 0px 5px 0px;\n    background-color: var(--primary-dark);\n    color: var(--primary-light);\n}'],sourceRoot:""}]);const A=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(i[c]=!0)}for(var s=0;s<n.length;s++){var d=[].concat(n[s]);r&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],A=0;A<n.length;A++){var c=n[A],s=r.base?c[0]+r.base:c[0],d=a[s]||0,l="".concat(s," ").concat(d);a[s]=d+1;var p=t(l),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var h=o(u,r);r.byIndex=A,e.splice(A,0,{identifier:l,updater:h,references:1})}i.push(l)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=t(a[i]);e[A].references--}for(var c=r(n,o),s=0;s<a.length;s++){var d=t(a[s]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=c}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{const n=t.p+"83e6cfdefeb1a10cc274.svg",e=t.p+"83deaa37bf91e3681edd.svg";let r=[],o=0;const a=(n,e,t)=>{let o=[n,e,t];r.push(o)},i=t=>{const r=document.createElement("div");return r.classList.add("definedTask"),r.setAttribute("id",`definedTask${o}`),r.appendChild((n=>{const e=document.createElement("div");e.classList.add("checkbox");const t=document.createElement("input");t.setAttribute("type","checkbox"),t.setAttribute("id",`object${o}`),t.setAttribute("name",`object${o}`),t.setAttribute("value",`${n[0]}`);const r=document.createElement("label");r.setAttribute("for",`object${o}`),r.textContent=n[0];const a=document.createElement("span");return a.classList.add("checkmark"),r.appendChild(t),r.appendChild(a),e.appendChild(r),t.addEventListener("click",(n=>{let e=n.target.name.substring(6);if(n.target.checked)return(n=>{document.getElementById(`definedTask${n}`).classList.add("strikethrough")})(e);(n=>{document.getElementById(`definedTask${n}`).classList.remove("strikethrough")})(e)})),o++,e})(t)),r.appendChild((t=>{const r=document.createElement("div");r.classList.add("date");const o=new Image;o.src=e;const a=new Image;a.src=n;const i=document.createElement("p");return i.innerHTML=t[2],a.addEventListener("click",(n=>{console.log("delete")})),o.addEventListener("click",(n=>{console.log("edit")})),r.appendChild(i),r.appendChild(o),r.appendChild(a),r})(t)),r},A=n=>{const e=document.getElementById("main").querySelector("div");e.textContent="",e.appendChild(c())},c=n=>{let e=[];document.querySelector(".taskList").querySelectorAll("div.checkbox > label").forEach((n=>{if(n.querySelector("input").checked)return e.push(n.textContent)}));const t=document.createElement("div");return t.classList.add("task"),r.forEach((n=>{0===Object.keys(e).length&&t.appendChild(i(n)),e.forEach((e=>{n[1]==e&&t.appendChild(i(n))}))})),o=0,t},s=t.p+"110f0abe7a0e92fd6115.svg",d=n=>{const e=document.getElementById("main");e.textContent="",e.appendChild((n=>{const e=document.createElement("h2");return e.classList.add(`${n}Main`),e.innerHTML=`${n}`,e})(n)),e.appendChild(c()),e.appendChild((()=>{const n=document.createElement("div");n.classList.add("addTask");const e=new Image;e.src=s;const t=document.createElement("p");return t.innerHTML="Add Task",n.appendChild(e),n.appendChild(t),n.addEventListener("click",(n=>{console.log("generate new task")})),n})())},l=()=>{const n=document.createElement("div");n.classList.add("nav");const e=document.createElement("h2"),t=document.createElement("h2"),a=document.createElement("h2"),i=document.createElement("div"),c=document.createElement("h2");return e.classList.add("home","navSelection","active"),t.classList.add("today","navSelection"),a.classList.add("week","navSelection"),i.classList.add("filter"),e.innerHTML="Home",t.innerHTML="Today",a.innerHTML="Week",c.innerHTML="Filter",i.appendChild(c),e.addEventListener("click",(n=>{n.target.classList.contains("active")||(p(e),d("Home"))})),t.addEventListener("click",(n=>{n.target.classList.contains("active")||(p(t),d("Today"))})),a.addEventListener("click",(n=>{n.target.classList.contains("active")||(p(a),d("Week"))})),i.appendChild((()=>{let n=[];const e=document.createElement("div");return e.classList.add("taskList"),r.forEach((t=>{for(let e=0;e<n.length;e++)if(t[1]==n[e])return;e.appendChild(((n,e)=>{const t=document.createElement("div");t.classList.add("checkbox");const r=document.createElement("input");r.setAttribute("type","checkbox"),r.setAttribute("id",`filterObject${o}`),r.setAttribute("name",`filterObject${o}`),r.setAttribute("value",`${n[1]}`),r.setAttribute("checked","true");const a=document.createElement("label");a.setAttribute("for",`filterObject${o}`),a.textContent=n[1];const i=document.createElement("span");return i.classList.add("checkmark"),a.appendChild(r),a.appendChild(i),t.appendChild(a),r.addEventListener("click",(n=>{A(n)})),e.push(n[1]),o++,t})(t,n))})),e})()),n.appendChild(e),n.appendChild(t),n.appendChild(a),n.appendChild(i),n},p=n=>{document.querySelectorAll(".navSelection").forEach((n=>{null!=n&&n.classList.remove("active")})),n.classList.add("active")};var u=t(379),h=t.n(u),m=t(795),C=t.n(m),k=t(569),B=t.n(k),f=t(565),g=t.n(f),x=t(216),I=t.n(x),b=t(589),v=t.n(b),y=t(426),E={};E.styleTagTransform=v(),E.setAttributes=g(),E.insert=B().bind(null,"head"),E.domAPI=C(),E.insertStyleElement=I(),h()(y.Z,E),y.Z&&y.Z.locals&&y.Z.locals,(()=>{const n=document.getElementById("content");a("Wash Dishes","Chores","2022-09-22"),a("Take out trash","Chores","2022-09-25"),a("Milk","Shopping","2022-09-26"),a("Bread","Shopping","2022-09-26"),n.appendChild((()=>{const n=document.createElement("div");n.classList.add("header");const e=document.createElement("h1");return e.classList.add("title"),e.innerHTML="Todo List",n.appendChild(e),n})()),n.appendChild((()=>{const n=document.createElement("div");return n.classList.add("body"),n.appendChild(l()),n.appendChild((()=>{const n=document.createElement("div");return n.setAttribute("id","main"),n})()),n})()),n.appendChild((()=>{const n=document.createElement("div");return n.classList.add("footer"),n.innerHTML="Page made by Troy Boxrucker 2022",n})()),p(document.querySelector(".nav")),d("Home")})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,