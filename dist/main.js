(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>c});var r=t(537),a=t.n(r),i=t(645),o=t.n(i)()(a());o.push([e.id,'html {\n    --primary-dark: #333;\n    --primary-light: #ededed;\n    --secondary-light: #fefefe;\n    --darker-light: #bdbdbd;\n}\n\n* {\n    margin: 0%;\n    padding: 0%;\n    box-sizing: border-box;\n}\n\nbody {\n    background-color: var(--primary-light);\n    font-family: \'Roboto\', sans-serif;\n    color: var(--primary-dark);\n    display: flex;\n    flex-direction: column;\n    min-height: 100vh;\n    font-size: 1.2em;\n    background-position: bottom;\n    background-attachment: fixed;\n    background-size: cover;\n}\n\ninput, select, button {\n    font-family: inherit;\n    font-size: inherit;\n}\n\n#content {\n    display: flex;\n    flex-direction: column;\n    height: 100vh;\n}\n\n/* Header section */\n\n.header {\n    background-color: var(--primary-dark);\n    color: var(--primary-light);\n    padding: 25px 0px 25px 25px;\n}\n\n/* Body section */\n\n.body {\n    flex: 1;\n    display: flex;\n}\n\n/* Nav body section */\n\n.nav {\n    padding: 25px 25px 0px 25px;\n    max-width: 200px;\n    min-width: 200px;\n    background-color: var(--darker-light);\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.filter {\n    margin: 10px;\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\n.taskList p {\n    margin: 10px;\n}\n\n/* Main body section */\n\n#main {\n    width: 800px;\n    margin: 0 auto;\n    padding: 25px 25px 0px 25px;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 10px;\n}\n\n#main h2 {\n    padding: 5px;\n}\n\n.addTask {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    font-size: 22px;\n    color: #717171;\n    cursor: pointer;\n}\n\n.addTask img {\n    height: 26px;\n    padding-left: 5px;\n}\n\n.addTask:hover {\n    filter: invert(0%) sepia(100%) saturate(0%) hue-rotate(70deg) brightness(95%) contrast(103%);\n    color: black;\n}\n\n.task {\n    align-self: stretch;\n    display: flex;\n    flex-direction: column;\n}\n\n.definedTask {\n    display: flex;\n    width:100%;\n    justify-content: space-between;\n    padding: 5px;\n}\n\n/* Checkbox styling */\n\n.checkbox {\n    display: block;\n    position: relative;\n    padding-left: 35px;\n    margin-bottom: 12px;\n    cursor: pointer;\n    font-size: 22px;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n}\n\n.checkbox input {\n    position: absolute;\n    opacity: 0;\n    cursor: pointer;\n    height: 0;\n    width: 0;\n}\n\n.checkmark {\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 25px;\n    width: 25px;\n    background-color: white;\n    cursor: pointer;\n}\n\n.checkbox:hover input ~ .checkmark {\n    background-color: var(--darker-light);\n}\n\n.checkmark:after {\n    content: "";\n    position: absolute;\n    display: none;\n    cursor: pointer;\n}\n\n.checkbox input:checked ~ .checkmark {\n    background-color: var(--primary-dark);\n}\n\n.checkbox input:checked ~ .checkmark:after {\n    display: block;\n}\n\n.checkbox .checkmark:after {\n    left: 9px;\n    top: 5px;\n    width: 5px;\n    height: 10px;\n    border: solid white;\n    border-width: 0 3px 3px 0;\n    -webkit-transform: rotate(45deg);\n    -ms-transform: rotate(45deg);\n    transform: rotate(45deg);\n}\n\n\n\n\n\n\n.taskList .checkbox {\n    display: block;\n    position: relative;\n    padding-left: 25px;\n    margin-bottom: 12px;\n    cursor: pointer;\n    font-size: 17px;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n}\n\n.taskList .checkbox input {\n    position: absolute;\n    opacity: 0;\n    cursor: pointer;\n    height: 0;\n    width: 0;\n}\n\n.taskList .checkmark {\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 15px;\n    width: 15px;\n    background-color: white;\n    cursor: pointer;\n}\n\n.taskList .checkbox:hover input ~ .checkmark {\n    background-color: var(--primary-light);\n}\n\n.taskList .checkmark:after {\n    content: "";\n    position: absolute;\n    display: none;\n    cursor: pointer;\n}\n\n.taskList .checkbox input:checked ~ .checkmark {\n    background-color: var(--primary-dark);\n}\n\n.taskList .checkbox input:checked ~ .checkmark:after {\n    display: block;\n}\n\n.taskList .checkbox .checkmark:after {\n    left: 4px;\n    top: 2px;\n    width: 2.5px;\n    height: 5px;\n    border: solid white;\n    border-width: 0 3px 3px 0;\n    -webkit-transform: rotate(45deg);\n    -ms-transform: rotate(45deg);\n    transform: rotate(45deg);\n}\n\n/* Add task display */\n\n.addTaskBox {\n    color: var(--primary-dark);\n}\n\n\n\n\n.strikethrough {\n    text-decoration: line-through;\n    color: var(--darker-light);\n    filter: invert(94%) sepia(0%) saturate(1098%) hue-rotate(148deg) brightness(85%) contrast(80%);    \n}\n\n.date {\n    display: flex;\n    gap: 5px;\n}\n\n.date img {\n    height: 20px;\n    cursor: pointer;\n}\n\n.date img:hover {\n    transform: scale(1.1);\n    filter: invert(19%) sepia(0%) saturate(19%) hue-rotate(251deg) brightness(86%) contrast(89%);\n}\n\n/* Footer section */\n\n.footer {\n    text-align: center;\n    padding: 5px 0px 5px 0px;\n    background-color: var(--primary-dark);\n    color: var(--primary-light);\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:['html {\n    --primary-dark: #333;\n    --primary-light: #ededed;\n    --secondary-light: #fefefe;\n    --darker-light: #bdbdbd;\n}\n\n* {\n    margin: 0%;\n    padding: 0%;\n    box-sizing: border-box;\n}\n\nbody {\n    background-color: var(--primary-light);\n    font-family: \'Roboto\', sans-serif;\n    color: var(--primary-dark);\n    display: flex;\n    flex-direction: column;\n    min-height: 100vh;\n    font-size: 1.2em;\n    background-position: bottom;\n    background-attachment: fixed;\n    background-size: cover;\n}\n\ninput, select, button {\n    font-family: inherit;\n    font-size: inherit;\n}\n\n#content {\n    display: flex;\n    flex-direction: column;\n    height: 100vh;\n}\n\n/* Header section */\n\n.header {\n    background-color: var(--primary-dark);\n    color: var(--primary-light);\n    padding: 25px 0px 25px 25px;\n}\n\n/* Body section */\n\n.body {\n    flex: 1;\n    display: flex;\n}\n\n/* Nav body section */\n\n.nav {\n    padding: 25px 25px 0px 25px;\n    max-width: 200px;\n    min-width: 200px;\n    background-color: var(--darker-light);\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.filter {\n    margin: 10px;\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\n.taskList p {\n    margin: 10px;\n}\n\n/* Main body section */\n\n#main {\n    width: 800px;\n    margin: 0 auto;\n    padding: 25px 25px 0px 25px;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 10px;\n}\n\n#main h2 {\n    padding: 5px;\n}\n\n.addTask {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    font-size: 22px;\n    color: #717171;\n    cursor: pointer;\n}\n\n.addTask img {\n    height: 26px;\n    padding-left: 5px;\n}\n\n.addTask:hover {\n    filter: invert(0%) sepia(100%) saturate(0%) hue-rotate(70deg) brightness(95%) contrast(103%);\n    color: black;\n}\n\n.task {\n    align-self: stretch;\n    display: flex;\n    flex-direction: column;\n}\n\n.definedTask {\n    display: flex;\n    width:100%;\n    justify-content: space-between;\n    padding: 5px;\n}\n\n/* Checkbox styling */\n\n.checkbox {\n    display: block;\n    position: relative;\n    padding-left: 35px;\n    margin-bottom: 12px;\n    cursor: pointer;\n    font-size: 22px;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n}\n\n.checkbox input {\n    position: absolute;\n    opacity: 0;\n    cursor: pointer;\n    height: 0;\n    width: 0;\n}\n\n.checkmark {\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 25px;\n    width: 25px;\n    background-color: white;\n    cursor: pointer;\n}\n\n.checkbox:hover input ~ .checkmark {\n    background-color: var(--darker-light);\n}\n\n.checkmark:after {\n    content: "";\n    position: absolute;\n    display: none;\n    cursor: pointer;\n}\n\n.checkbox input:checked ~ .checkmark {\n    background-color: var(--primary-dark);\n}\n\n.checkbox input:checked ~ .checkmark:after {\n    display: block;\n}\n\n.checkbox .checkmark:after {\n    left: 9px;\n    top: 5px;\n    width: 5px;\n    height: 10px;\n    border: solid white;\n    border-width: 0 3px 3px 0;\n    -webkit-transform: rotate(45deg);\n    -ms-transform: rotate(45deg);\n    transform: rotate(45deg);\n}\n\n\n\n\n\n\n.taskList .checkbox {\n    display: block;\n    position: relative;\n    padding-left: 25px;\n    margin-bottom: 12px;\n    cursor: pointer;\n    font-size: 17px;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n}\n\n.taskList .checkbox input {\n    position: absolute;\n    opacity: 0;\n    cursor: pointer;\n    height: 0;\n    width: 0;\n}\n\n.taskList .checkmark {\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 15px;\n    width: 15px;\n    background-color: white;\n    cursor: pointer;\n}\n\n.taskList .checkbox:hover input ~ .checkmark {\n    background-color: var(--primary-light);\n}\n\n.taskList .checkmark:after {\n    content: "";\n    position: absolute;\n    display: none;\n    cursor: pointer;\n}\n\n.taskList .checkbox input:checked ~ .checkmark {\n    background-color: var(--primary-dark);\n}\n\n.taskList .checkbox input:checked ~ .checkmark:after {\n    display: block;\n}\n\n.taskList .checkbox .checkmark:after {\n    left: 4px;\n    top: 2px;\n    width: 2.5px;\n    height: 5px;\n    border: solid white;\n    border-width: 0 3px 3px 0;\n    -webkit-transform: rotate(45deg);\n    -ms-transform: rotate(45deg);\n    transform: rotate(45deg);\n}\n\n/* Add task display */\n\n.addTaskBox {\n    color: var(--primary-dark);\n}\n\n\n\n\n.strikethrough {\n    text-decoration: line-through;\n    color: var(--darker-light);\n    filter: invert(94%) sepia(0%) saturate(1098%) hue-rotate(148deg) brightness(85%) contrast(80%);    \n}\n\n.date {\n    display: flex;\n    gap: 5px;\n}\n\n.date img {\n    height: 20px;\n    cursor: pointer;\n}\n\n.date img:hover {\n    transform: scale(1.1);\n    filter: invert(19%) sepia(0%) saturate(19%) hue-rotate(251deg) brightness(86%) contrast(89%);\n}\n\n/* Footer section */\n\n.footer {\n    text-align: center;\n    padding: 5px 0px 5px 0px;\n    background-color: var(--primary-dark);\n    color: var(--primary-light);\n}'],sourceRoot:""}]);const c=o},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,a,i){"string"==typeof e&&(e=[[null,e,void 0]]);var o={};if(r)for(var c=0;c<this.length;c++){var A=this[c][0];null!=A&&(o[A]=!0)}for(var s=0;s<e.length;s++){var d=[].concat(e[s]);r&&o[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),a&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=a):d[4]="".concat(a)),n.push(d))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(a," */"),o=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(o).concat([i]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var i={},o=[],c=0;c<e.length;c++){var A=e[c],s=r.base?A[0]+r.base:A[0],d=i[s]||0,l="".concat(s," ").concat(d);i[s]=d+1;var p=t(l),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var h=a(u,r);r.byIndex=c,n.splice(c,0,{identifier:l,updater:h,references:1})}o.push(l)}return o}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var i=r(e=e||[],a=a||{});return function(e){e=e||[];for(var o=0;o<i.length;o++){var c=t(i[o]);n[c].references--}for(var A=r(e,a),s=0;s<i.length;s++){var d=t(i[s]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}i=A}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var a=n[r];if(void 0!==a)return a.exports;var i=n[r]={id:r,exports:{}};return e[r](i,i.exports,t),i.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.nc=void 0,(()=>{const e=t.p+"110f0abe7a0e92fd6115.svg",n=n=>{const t=document.getElementById("main");let r=t.querySelectorAll("input[type=checkbox][checked=true]");t.textContent="",t.appendChild((e=>{const n=document.createElement("h2");return n.classList.add(`${e}Main`),n.innerHTML=`${e}`,n})(n)),t.appendChild(m(r)),t.appendChild((()=>{const n=document.createElement("div");n.classList.add("addTask"),document.createElement("div").classList.add("addTaskListener");const t=new Image;t.src=e;const r=document.createElement("p");return r.innerHTML="Add Task",n.appendChild(t),n.appendChild(r),n.addEventListener("click",(e=>i(e))),n})())};let r="0",a="0";const i=(e,t,o)=>{let c,A,u="",h="",m="",C="",g="";if(null!=t){c=e.target.closest("div.definedTask");const n=c.querySelector("input");let t=n.name.substring(6);n.checked&&(console.log("this should be checked"),p(t),g=1),A=c.innerHTML,C=c.id.substring(11),u=o[0],h=o[1],m=o[2]}else C="new",0==r&&(c=e.target.closest("div.addTask"),null!=c&&(A=c.innerHTML),0==a?r=1:a=0);if(null!=c&&(c.innerHTML=""),null==c)return;const k=document.createElement("div");k.classList.add("addTaskBox");const f=document.createElement("textarea"),b=document.createElement("input"),x=document.createElement("input"),I=document.createElement("button"),v=document.createElement("button");f.setAttribute("name","title"),f.setAttribute("id","title"),f.setAttribute("placeholder","Title: Vacuum"),f.textContent=u,f.setAttribute("maxlength","35"),f.setAttribute("required","true"),b.setAttribute("type","date"),b.setAttribute("id","dueDate"),b.setAttribute("placeholder","Due Date"),b.setAttribute("value",m),b.setAttribute("autocomplete","off"),b.setAttribute("class","addTaskButton"),x.setAttribute("type","text"),x.setAttribute("id","categoryFilter"),x.setAttribute("placeholder","Category"),x.setAttribute("value",h),x.setAttribute("autocomplete","off"),x.setAttribute("class","addTaskButton"),I.classList.add("acceptButton"),v.classList.add("rejectButton"),I.setAttribute("id","acceptButton"),v.setAttribute("id","rejectButton"),I.innerHTML="Accept",v.innerHTML="Reject",k.appendChild(f),k.appendChild(b),k.appendChild(x),k.appendChild(I),k.appendChild(v),c.appendChild(k),I.addEventListener("click",(e=>{if(null!=t){const t=document.getElementById("main").getElementsByTagName("h2")[0].textContent,r=e.target.closest("div"),a=r.getElementsByTagName("textarea")[0].value,i=r.getElementsByTagName("input")[0].value,o=r.getElementsByTagName("input")[1].value;if(null==a||null==a||""==a)return void alert("Title cannot be an empty field");if(null==i||null==i||""==i)return void alert("Date cannot be an empty field");if(null==o||null==o||""==o)return void alert("Profile cannot be an empty field");s(a,o,i,C),B(),n(t)}else{console.log(C);const t=document.getElementById("main").getElementsByTagName("h2")[0].textContent,i=e.target.closest("div"),o=i.getElementsByTagName("textarea")[0].value,c=i.getElementsByTagName("input")[0].value,A=i.getElementsByTagName("input")[1].value;if(null==o||null==o||""==o)return void alert("Title cannot be an empty field");if(null==c||null==c||""==c)return void alert("Date cannot be an empty field");if(null==A||null==A||""==A)return void alert("Profile cannot be an empty field");s(o,A,c,C),B(),n(t),e.target,r=0,a=1}})),v.addEventListener("click",(e=>{if(null!=t){c.innerHTML=A;const e=c.querySelectorAll("img"),n=c.querySelector("div.checkbox>label>input");if(1==g){let e=n.name.substring(6);n.setAttribute("checked","true"),l(e),g=""}else n.removeAttribute("checked");e[0].addEventListener("click",(e=>i(e,"edit",o))),e[1].addEventListener("click",(e=>d(e))),n.addEventListener("click",(e=>{let n=e.target.closest("input").name.substring(6);if(e.target.checked)return l(n);p(n)}))}else c.innerHTML=A,r=0,a=1}))},o=t.p+"83e6cfdefeb1a10cc274.svg",c=t.p+"83deaa37bf91e3681edd.svg";let A=[];const s=(e,n,t,r)=>{let a=[e,n,t,r],i=[];if("new"==r&&0==A.length)a[3]=0,A[0]=a;else if(A.length>0){let e=0;A.forEach((n=>{i.push(n[3]),n[3]==r?A[e]=a:r>=A.length&&(A[r]=a),e++})),e=0}else A[r]=a;if(i.sort((function(e,n){return e<n?-1:e>n?1:0})),"new"==r&&null!=i[0]){let e=0;i.every((n=>n!=e?(a[3]=e,A.push(a),!1):(e++,e!=i.length||(a[3]=e,A.push(a),!1)))),e=0}},d=e=>{let t=e.target.closest("div.definedTask"),r=t.id.substring(11),a=0;A.forEach((e=>{e[3]==r&&delete A[a],a++})),a=0;let i=[];A.forEach((e=>{null!=e&&(i[a]=e,a++)})),a=0,A=i;const o=document.getElementById("main").getElementsByTagName("h2")[0].textContent;B(),n(o),t.remove()},l=e=>{document.getElementById(`definedTask${e}`).classList.add("strikethrough")},p=e=>{document.getElementById(`definedTask${e}`).classList.remove("strikethrough")},u=e=>{const n=document.createElement("div");return n.classList.add("definedTask"),n.setAttribute("id",`definedTask${e[3]}`),n.appendChild((e=>{const n=document.createElement("div");n.classList.add("checkbox");const t=document.createElement("input");t.setAttribute("type","checkbox"),t.setAttribute("id",`object${e[3]}`),t.setAttribute("name",`object${e[3]}`),t.setAttribute("value",`${e[0]}`);const r=document.createElement("label");r.setAttribute("for",`object${e[3]}`),r.textContent=e[0];const a=document.createElement("span");return a.classList.add("checkmark"),r.appendChild(t),r.appendChild(a),n.appendChild(r),t.addEventListener("click",(e=>{let n=e.target.name.substring(6);if(e.target.checked)return e.target.setAttribute("checked","true"),l(n);p(n)})),n})(e)),n.appendChild((e=>{const n=document.createElement("div");n.classList.add("date");const t=new Image;t.src=c;const r=new Image;r.src=o;const a=document.createElement("p");return a.innerHTML=e[2],r.addEventListener("click",(e=>d(e))),t.addEventListener("click",(n=>i(n,"edit",e))),n.appendChild(a),n.appendChild(t),n.appendChild(r),n})(e)),n},h=e=>{const n=document.getElementById("main").querySelector("div");n.textContent="",n.appendChild(m())},m=e=>{let n=[];document.querySelector(".taskList").querySelectorAll("div.checkbox > label").forEach((e=>{if(e.querySelector("input").checked)return n.push(e.textContent)}));const t=document.createElement("div");return t.classList.add("task"),A.forEach((r=>{0===Object.keys(n).length&&(null!=e?e.forEach((e=>{})):t.appendChild(u(r)),console.log("Here i am")),n.forEach((e=>{r[1]==e&&(console.log("am I in here???"),t.appendChild(u(r)))}))})),console.log(t),t},C=e=>{e.innerHTML="";const n=document.createElement("h2");return n.innerHTML="Filter",e.appendChild(n),e.appendChild((()=>{let e=[];const n=document.createElement("div");return A.sort((function(e,n){var t=e[0].toUpperCase(),r=n[0].toUpperCase();return t<r?-1:t>r?1:0})),A.sort((function(e,n){var t=e[1].toUpperCase(),r=n[1].toUpperCase();return t<r?-1:t>r?1:0})),n.classList.add("taskList"),A.forEach((t=>{for(let n=0;n<e.length;n++)if(t[1]==e[n])return;n.appendChild(((e,n)=>{const t=document.createElement("div");t.classList.add("checkbox");const r=document.createElement("input");r.setAttribute("type","checkbox"),r.setAttribute("id",`filterObject${e[3]}`),r.setAttribute("name",`filterObject${e[3]}`),r.setAttribute("value",`${e[1]}`),r.setAttribute("checked","true");const a=document.createElement("label");a.setAttribute("for",`filterObject${e[3]}`),a.textContent=e[1];const i=document.createElement("span");return i.classList.add("checkmark"),a.appendChild(r),a.appendChild(i),t.appendChild(a),r.addEventListener("click",(e=>{h(e)})),n.push(e[1]),t})(t,e))})),n})()),e},B=()=>{const e=document.getElementById("filterNav");C(e)},g=e=>{document.querySelectorAll(".navSelection").forEach((e=>{null!=e&&e.classList.remove("active")})),e.classList.add("active")};var k=t(379),f=t.n(k),b=t(795),x=t.n(b),I=t(569),v=t.n(I),y=t(565),E=t.n(y),L=t(216),T=t.n(L),w=t(589),S=t.n(w),q=t(426),M={};M.styleTagTransform=S(),M.setAttributes=E(),M.insert=v().bind(null,"head"),M.domAPI=x(),M.insertStyleElement=T(),f()(q.Z,M),q.Z&&q.Z.locals&&q.Z.locals,(e=>{const t=document.getElementById("content");s("Wash Dishes","Chores","2022-09-22","0"),s("Take out trash","Chores","2022-09-25","1"),s("Milk","Shopping","2022-09-26","2"),s("Bread","Shopping","2022-09-26","3"),t.appendChild((()=>{const e=document.createElement("div");e.classList.add("header");const n=document.createElement("h1");return n.classList.add("title"),n.innerHTML="Todo List",e.appendChild(n),e})()),t.appendChild((()=>{const e=document.createElement("div");return e.classList.add("body"),e.appendChild((()=>{const e=document.createElement("div");e.classList.add("nav");const t=document.createElement("h2"),r=document.createElement("h2"),a=document.createElement("h2"),i=document.createElement("div");return t.classList.add("home","navSelection","active"),r.classList.add("today","navSelection"),a.classList.add("week","navSelection"),i.classList.add("filter"),i.setAttribute("id","filterNav"),t.innerHTML="Home",r.innerHTML="Today",a.innerHTML="Week",t.addEventListener("click",(e=>{e.target.classList.contains("active")||(g(t),n("Home"))})),r.addEventListener("click",(e=>{e.target.classList.contains("active")||(g(r),n("Today"))})),a.addEventListener("click",(e=>{e.target.classList.contains("active")||(g(a),n("Week"))})),e.appendChild(t),e.appendChild(r),e.appendChild(a),e.appendChild(C(i)),e})()),e.appendChild((()=>{const e=document.createElement("div");return e.setAttribute("id","main"),e})()),e})()),t.appendChild((()=>{const e=document.createElement("div");return e.classList.add("footer"),e.innerHTML="Page made by Troy Boxrucker 2022",e})()),g(document.querySelector(".nav")),n("Home")})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,